package com.completeperspective.media.model{	import com.completeperspective.media.events.*;	import com.completeperspective.vo.MediaVO;		import flash.events.*;	import flash.net.*;	/**	 * Holds a reference to all models in the emulated system	 * 	 * @author Adam Colpitts	 * @version 1.0	 * @created 02-Aug-2008 16:28:14	 */	public class MediaPlayerModel extends EventDispatcher	{		static private var _instance : MediaPlayerModel;				private var _playlist : Playlist;				public var nowPlaying : MediaVO;		public var playerWidth : Number = 512;		public var playerHeight : Number = 288;			    /**		 * Components use ModelLocator.getInstance() to obtain a reference to this Singelton		 * 		 * @return ModelLocator		 */		public static function getInstance() : MediaPlayerModel		{			if( MediaPlayerModel._instance == null ) {				MediaPlayerModel._instance = new MediaPlayerModel( new SingletonEnforcer() );			}			return MediaPlayerModel._instance;		}				public function MediaPlayerModel( enforcer : SingletonEnforcer )		{			init();		}				private function init() : void		{			_playlist = new Playlist();			var nordic : MediaVO = new MediaVO();			nordic.bitrate = 768;			nordic.duration = 154.88;						nowPlaying = nordic;		}				/**		 * Loads the MRSS Playlist		 */		public function loadPlaylist( url : String ) : void		{			playlist.addEventListener(PlaylistEvent.PLAYLIST_READY, handlePlaylistReady );			playlist.load( new URLRequest( url ) );					}				private function handlePlaylistReady( e : PlaylistEvent) : void		{			nowPlaying = e.playlist.items[0];			dispatchEvent( e );		}				/**		 * Returns a reference to the playlist that is loaded in the system.		 *		 * @return PlaylistModel		 */		public function get playlist() : Playlist		{			return _playlist		}	}//end PlayerController}class SingletonEnforcer{}